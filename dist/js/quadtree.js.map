{"version":3,"sources":["../../js/namespace.js","../../js/components/answers-model.js","../../js/components/answer-collection.js","../../js/map.js","../../js/quadtree-example.js"],"names":[],"mappings":"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","file":"quadtree.js","sourcesContent":["(function(global) {\n    'use strict';\n\n    function ns (parentNamespace, nsString, extent) {\n        var namespaceParts = nsString.split('.'),\n            hlq = 'app',\n            parent = parentNamespace,\n            i;\n\n        if (namespaceParts[0] === hlq) {\n            namespaceParts = namespaceParts.slice(0);\n        }\n\n        for (i = 0; i < namespaceParts.length; i += 1) {\n            if (parent[namespaceParts[i]] === undefined) {\n                if (extent) {\n                    parent[namespaceParts[i]] = extent;\n                } else {\n                    parent[namespaceParts[i]] = {};\n                }\n            }\n\n            parent = parent[namespaceParts[i]];\n        }\n\n        return parent;\n    }\n\n    function bindNS (parentNamespace, namespaceString, extent) {\n        ns.apply(this, [parentNamespace, namespaceString, extent]);\n    }\n\n    global.app = {\n        ns: ns,\n        bindNS: bindNS\n    };\n\n}(this));\n","/*global app Backbone*/\n(function (app) {\n    'use strict';\n\n    app.ns(app, 'AnswersModel', Backbone.Model.extend({\n        defaults: {\n            'x_coord': 0,\n            'y_coord': 0\n        },\n\n        initialize: function () {  }\n    }));\n}(app));\n","/*global app Backbone $*/\n(function (app) {\n    'use strict';\n\n    app.ns(app, 'AnswerCollection', Backbone.Collection.extend({\n        model: app.AnswersModel,\n\n        initialize: function () {\n            this.loaded = new $.Deferred();\n        },\n\n        fetch: function () {\n            var jqXHR = Backbone.Collection.prototype.fetch.apply(this, arguments);\n\n            jqXHR.done(this.loaded.resolve);\n            jqXHR.fail(this.loaded.reject);\n        },\n\n        parse: function(response) {\n            return response.items;\n        },\n        url: 'http://api.stackexchange.com/2.2/tags/reactjs/faq?site=stackoverflow'\n    }));\n}(app));\n","(function (app) {\n    'use strict';\n\n    function initialize() {\n        var mapOptions = {\n            center: new google.maps.LatLng(40.583324574181574, -90.72755416015626),\n            zoom: 8\n        };\n        var map = new google.maps.Map(document.getElementById('map-canvas'),\n            mapOptions);\n\n        app.ns(app, 'map', map);\n\n        google.maps.event.addListener(map, 'idle', function () {\n            Backbone.Events.trigger('map-idle');\n        });\n\n        google.maps.event.addListener(map, 'zoom_changed', function () {\n            Backbone.Events.trigger('zoom-change', map.getBounds());\n        });\n\n        google.maps.event.addListener(map, 'bounds_changed', function () {\n            Backbone.Events.trigger('bounds-change', map.getBounds());\n        });\n\n        google.maps.event.addListenerOnce(map, 'idle', function () {\n            Backbone.Events.trigger('map-loaded', map);\n        });\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n}(app));\n","(function (app) {\n    'use strict';\n\n    var EPSG_3857 = '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs',\n        EPSG_4326 = '+proj=longlat +datum=WGS84 +no_defs',\n//        WORLD_BOUNDS = [[-20026376.39, -20048966.10], [20026376.39, 20048966.10]],\n\n        host = Backbone.history.location.hostname,\n        collection = new Backbone.Collection(),\n        loaded,\n        data = '/locations.json',\n        endPointUrl = host === 'localhost' ? data : '/spike-playground' + data,\n\n        mapLoaded = new $.Deferred(),\n\n        rects = [],\n        markers = {},\n        groupMarkers = {};\n\n    loaded = collection.fetch({url: endPointUrl});\n\n    function coordinatesToXy(lon, lat) {\n        return {x: lon, y: lat};\n    }\n\n    function convertLatLngToXy(latLng) {\n        var projectedPoint = proj4(EPSG_4326, EPSG_3857, [latLng.lng, latLng.lat]);\n\n        return coordinatesToXy(projectedPoint[0], projectedPoint[1]);\n    }\n\n    function convertGoogleMapBoundsToXY(inputBounds) {\n        var swLatLng = inputBounds.getSouthWest(),\n            neLatLng = inputBounds.getNorthEast(),\n\n            swXY = convertLatLngToXy({\n                lat: swLatLng.lat(),\n                lng: swLatLng.lng()\n            }),\n\n            neXY = convertLatLngToXy({\n                lat: neLatLng.lat(),\n                lng: neLatLng.lng()\n            });\n\n        return {\n            sw: swXY,\n            ne: neXY\n        };\n    }\n\n    function filterLeafNodes(nodes) {\n        return _.filter(nodes, function (childNode) {\n            return (childNode && childNode.leaf);\n        });\n    }\n\n    function updateNodes(qTree) {\n        qTree.depth = 0;\n\n        qTree.visit(function (node, x1, y1, x2, y2) {\n            node.bounds = {\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2\n            };\n\n            if (!node.leaf) {\n                var leafNodes = filterLeafNodes(node.nodes);\n                node.containsLeaf = leafNodes.length > 0;\n                node.nodes = _.compact(node.nodes);\n            }\n        });\n    }\n\n    function bboxToPolygonCoordinateArray(swPoint, nePoint) {\n        return [\n            [\n                [nePoint.x, nePoint.y],\n                [swPoint.x, nePoint.y],\n                [swPoint.x, swPoint.y],\n                [nePoint.x, swPoint.y],\n                [nePoint.x, nePoint.y]\n            ]\n        ];\n    }\n\n    function bboxToPolygon(swPoint, nePoint) {\n        return new Terraformer.Polygon({\n            type: 'Polygon',\n            coordinates: bboxToPolygonCoordinateArray(swPoint, nePoint)\n        });\n    }\n\n    function pointInBounds(point, bbox) {\n        var swX = bbox.sw.x,\n            swY = bbox.sw.y,\n            neX = bbox.ne.x,\n            neY = bbox.ne.y,\n            y = point.y,\n            x = point.x;\n\n        return  swX <= x && x <= neX && swY <= y && y <= neY;\n    }\n\n    function createQuadTree(xyPoints, inputBounds) {\n        var quadtree,\n            bbox = convertGoogleMapBoundsToXY(inputBounds),\n\n            pointsInBounds = _.filter(xyPoints, function (point) {\n                return pointInBounds(point, bbox);\n            });\n\n//        if (xyPoints.length === pointsInBounds.length) {\n//            quadtree = d3.geom.quadtree()\n//                .extent(WORLD_BOUNDS)(pointsToArray(pointsInBounds));\n//        } else {\n            quadtree = d3.geom.quadtree(pointsInBounds);\n//        }\n\n        updateNodes(quadtree);\n\n        return quadtree;\n    }\n\n    function pointsToPolygon(x1, y1, x2, y2) {\n        return bboxToPolygon(coordinatesToXy(x1, y1), coordinatesToXy(x2, y2));\n    }\n\n    function flattenQuadtree(quadtree) {\n        var nodes = {},\n            nodeId = 0;\n\n        quadtree.visit(function (node) {\n            node.id = nodeId;\n            nodes[nodeId] = node;\n\n            nodeId += 1;\n        });\n\n        return nodes;\n    }\n\n    function terraformerBboxToExtent(inputBounds) {\n        var bounds = inputBounds.bbox();\n        return [[bounds[0], bounds[1]], [bounds[2], bounds[3]]];\n    }\n\n    function projectedCoordinatePairToGoogleLatLng(coordinates) {\n        var geographicCoords = proj4(EPSG_3857, EPSG_4326, coordinates);\n\n        return new google.maps.LatLng(geographicCoords[1], geographicCoords[0]);\n    }\n\n    function polygonToGoogleLatLngBounds(inputBounds) {\n        var bounds = terraformerBboxToExtent(inputBounds),\n            swCoords = bounds[0],\n            neCoords = bounds[1],\n\n            swGlatLng = projectedCoordinatePairToGoogleLatLng(swCoords),\n            neGlatLng = projectedCoordinatePairToGoogleLatLng(neCoords);\n\n        return new google.maps.LatLngBounds(swGlatLng, neGlatLng);\n    }\n\n    function getContainingBounds(nodes) {\n        return _.filter(nodes, function (childNode) {\n            return childNode.containsLeaf;\n        });\n    }\n\n    function getAllBoundsFromQuadtreeNodes(nodes) {\n        return _.map(getContainingBounds(nodes), function (node) {\n            var nodeBounds = node.bounds,\n                xyBounds = pointsToPolygon(\n                    nodeBounds.x1,\n                    nodeBounds.y1,\n                    nodeBounds.x2,\n                    nodeBounds.y2\n                );\n\n            xyBounds.id = node.id;\n\n            return xyBounds;\n        });\n    }\n\n    function hideDebugRectangles() {\n        _.each(rects, function (rect) {\n            rect.setMap(null);\n        });\n    }\n\n    function boundsContainedBy(outerBounds, innerBounds) {\n        if (outerBounds.id === innerBounds.id) {\n            return false;\n        }\n\n        var X_COORD = 0,\n            Y_COORD = 1,\n\n            innerBoundsCoords = terraformerBboxToExtent(innerBounds),\n            outerBoundsCoords = terraformerBboxToExtent(outerBounds),\n\n            outerNeCoords = outerBoundsCoords[1],\n            outerSwCoords = outerBoundsCoords[0],\n            innerNeCoords = innerBoundsCoords[1],\n            innerSwCoords = innerBoundsCoords[0];\n\n        return outerNeCoords[X_COORD] >= innerNeCoords[X_COORD] &&\n            outerNeCoords[Y_COORD] >= innerNeCoords[Y_COORD] &&\n            outerSwCoords[X_COORD] <= innerSwCoords[X_COORD] &&\n            outerSwCoords[Y_COORD] <= innerSwCoords[Y_COORD];\n    }\n\n    function filterBoundsThatContainBounds(allBoundsFromQuadtree) {\n        return _.filter(allBoundsFromQuadtree, function (outerBounds) {\n            var containsOthers = false;\n\n            _.each(allBoundsFromQuadtree, function (innerBounds) {\n                if (boundsContainedBy(outerBounds, innerBounds)) {\n                    containsOthers = true;\n                }\n            });\n\n            return !containsOthers;\n        });\n    }\n\n    function publishHideMarkerFor(nodesInBounds, bounds) {\n        _.each(nodesInBounds, function (nodeToHide) {\n            Backbone.Events.trigger('hide-marker', {point: {x: nodeToHide.x, y: nodeToHide.y}, bounds: bounds});\n        });\n    }\n\n    function renderQuadtree(quadtree) {\n        var nodes = flattenQuadtree(quadtree),\n            lowestDepthBounds,\n\n            allBoundsFromQuadtree;\n\n        hideDebugRectangles();\n\n        allBoundsFromQuadtree = getAllBoundsFromQuadtreeNodes(nodes);\n\n        lowestDepthBounds = filterBoundsThatContainBounds(allBoundsFromQuadtree);\n\n        _.each(lowestDepthBounds, function (childBounds) {\n            var nodesInChildBounds = nodes[childBounds.id].nodes;\n\n            publishHideMarkerFor(nodesInChildBounds, childBounds);\n        });\n\n        return quadtree;\n    }\n\n    function createMarkerForGroup(bounds) {\n        var center;\n\n        if (!groupMarkers[bounds.id]) {\n            center = polygonToGoogleLatLngBounds(bounds).getCenter();\n\n            groupMarkers[bounds.id] = new google.maps.Marker({\n                position: center,\n                map: app.map,\n                title: 'group ' + bounds.id,\n                opacity: 1.0,\n                icon: 'blue-marker.png'\n            });\n        }\n    }\n\n    function resetGroupMarkerCache() {\n        _.each(groupMarkers, function (marker) {\n            marker.setMap(null);\n        });\n\n        groupMarkers = {};\n    }\n\n    function renderMarker(locationModel) {\n        var marker = new google.maps.Marker({\n            position: new google.maps.LatLng(locationModel.attributes.location.lat, locationModel.attributes.location.lng),\n            title: locationModel.attributes.name,\n            opacity: 1.0\n        });\n\n        markers[locationModel.id] = marker;\n\n        marker.setMap(app.map);\n    }\n\n    function lookupModelByCoordinates(xCoord, yCoord) {\n        return collection.where({xCoord: xCoord, yCoord: yCoord})[0];\n    }\n\n    function hideMarkerFromCache(id) {\n        markers[id].setMap(null);\n    }\n\n    function groupMarkersWithin(bounds, point) {\n        var model = lookupModelByCoordinates(point.x, point.y);\n\n        hideMarkerFromCache(model.id);\n\n        createMarkerForGroup(bounds);\n    }\n\n    function listenToHideMarkerEvent() {\n        Backbone.Events.on('hide-marker', function (nodeToHide) {\n            groupMarkersWithin(nodeToHide.bounds, nodeToHide.point);\n        });\n    }\n\n    function renderOnBoundsChange(xyPoints) {\n        Backbone.Events.on('bounds-change', function (bounds) {\n            resetGroupMarkerCache();\n\n            _.each(markers, function (marker) {\n                marker.setOpacity(1.0);\n                marker.setMap(app.map);\n            });\n\n            renderQuadtree(\n                createQuadTree(xyPoints, bounds)\n            );\n\n        });\n    }\n\n    function updateModelWithProjectedCoordinates(model) {\n        var point = convertLatLngToXy(model.attributes.location);\n\n        model.set('xCoord', point.x);\n        model.set('yCoord', point.y);\n\n        return point;\n    }\n\n    function init() {\n        Backbone.Events.on('map-loaded', function () {\n            mapLoaded.resolve();\n        });\n\n        listenToHideMarkerEvent();\n\n        $.when(mapLoaded, loaded).done(function () {\n            var xyPoints = [],\n                modelIndex,\n                model;\n\n            for (modelIndex = 0; modelIndex < collection.length; modelIndex += 1) {\n                model = collection.models[modelIndex];\n\n                xyPoints.push(updateModelWithProjectedCoordinates(model));\n                renderMarker(model);\n            }\n\n            renderOnBoundsChange(xyPoints);\n\n            renderQuadtree(\n                createQuadTree(xyPoints, app.map.getBounds())\n            );\n        });\n    }\n\n    init();\n}(app));\n"]}