{"version":3,"sources":["../../js/namespace.js","../../js/components/answers-model.js","../../js/components/answer-collection.js","../../js/map.js","../../js/quadtree-example.js"],"names":[],"mappings":"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","file":"quadtree.js","sourcesContent":["(function(global) {\n    'use strict';\n\n    function ns (parent_ns, ns_string, extent) {\n        var ns_parts = ns_string.split('.'),\n            hlq = 'app',\n            parent = parent_ns,\n            i;\n\n        if (ns_parts[0] === hlq) {\n            ns_parts = ns_parts.slice(0);\n        }\n\n        for (i = 0; i < ns_parts.length; i += 1) {\n            if (parent[ns_parts[i]] === undefined) {\n                if (extent) {\n                    parent[ns_parts[i]] = extent;\n                } else {\n                    parent[ns_parts[i]] = {};\n                }\n            }\n\n            parent = parent[ns_parts[i]];\n        }\n\n        return parent;\n    }\n\n    function bindNS (parent_ns, ns_string, extent) {\n        ns.apply(this, [parent_ns, ns_string, extent]);\n    }\n\n    global.app = {\n        ns: ns,\n        bindNS: bindNS\n    };\n\n}(this));\n","(function (app) {\n    app.ns(app, 'AnswersModel', Backbone.Model.extend({\n        defaults: {\n            'x_coord': 0,\n            'y_coord': 0\n        },\n\n        initialize: function () {  }\n    }));\n}(app));","(function (app) {\n    app.ns(app, 'AnswerCollection', Backbone.Collection.extend({\n        model: app.AnswersModel,\n\n        initialize: function () {\n            this.loaded = $.Deferred();\n        },\n\n        fetch: function () {\n            var jqXHR = Backbone.Collection.prototype.fetch.apply(this, arguments);\n\n            jqXHR.done(this.loaded.resolve);\n            jqXHR.fail(this.loaded.reject);\n        },\n\n        parse: function(response) {\n            return response.items;\n        },\n        url: 'http://api.stackexchange.com/2.2/tags/reactjs/faq?site=stackoverflow'\n    }));\n}(app));","(function (app) {\n    function initialize() {\n        var mapOptions = {\n            center: new google.maps.LatLng(40.01144663490021, -90.22767623046876),\n            zoom: 7\n        };\n        var map = new google.maps.Map(document.getElementById(\"map-canvas\"),\n            mapOptions);\n\n        app.ns(app, 'map', map);\n\n        google.maps.event.addListener(map, 'idle', function () {\n            Backbone.Events.trigger('map-idle');\n        });\n\n        google.maps.event.addListener(map, 'zoom_changed', function () {\n            Backbone.Events.trigger('zoom-change', map.getBounds());\n        });\n\n        google.maps.event.addListener(map, 'bounds_changed', function () {\n            Backbone.Events.trigger('bounds-change', map.getBounds());\n        });\n\n        google.maps.event.addListenerOnce(map, 'idle', function () {\n            Backbone.Events.trigger('map-loaded');\n        });\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n}(app));","(function (app) {\n    var EPSG_4087 = '+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',\n        EPSG_4326 = '+proj=longlat +datum=WGS84 +no_defs',\n\n        host = Backbone.history.location.hostname,\n        collection = new Backbone.Collection(),\n        loaded,\n        data = '/dummy-data.json',\n        endPointUrl = host === 'localhost' ? data : '/spike-playground' + data,\n        mapLoaded = $.Deferred(),\n        rects = [],\n        markers = {},\n        groupMarkers = {};\n\n    loaded = collection.fetch({url: endPointUrl});\n\n    function convertLatLngToXy(latLng) {\n        var projectedPoint = proj4(EPSG_4326, EPSG_4087, [latLng.lng, latLng.lat]);\n\n        return {x: projectedPoint[0], y: projectedPoint[1]};\n    }\n\n    function convertGoogleMapBoundsToXY(inputBounds) {\n        var bounds = inputBounds || app.map.getBounds(),\n            swLatLng = bounds.getSouthWest(),\n            neLatLng = bounds.getNorthEast(),\n\n            swXY = convertLatLngToXy({\n                lat: swLatLng.lat(),\n                lng: swLatLng.lng()\n            }),\n\n            neXY = convertLatLngToXy({\n                lat: neLatLng.lat(),\n                lng: neLatLng.lng()\n            });\n\n        return {\n            sw: swXY,\n            ne: neXY\n        }\n    }\n\n    function updateNodes(qTree) {\n        qTree.depth = 0;\n\n        qTree.visit(function (node, x1, y1, x2, y2) {\n            node.bounds = {\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2\n            };\n\n            if (!node.leaf) {\n                var leafNodes = _.filter(node.nodes, function (node) {\n                    return (node && node.leaf);\n                });\n\n                node.containsLeaf = leafNodes.length > 0;\n            }\n        });\n    }\n\n    function pointToArray(point) {\n        return [point.x, point.y];\n    }\n\n    function pointsToArray(xyPoints) {\n        return _.map(xyPoints, pointToArray);\n    }\n\n    function bboxToPolygon(swPoint, nePoint) {\n        return new Terraformer.Polygon({\n            type:\"Polygon\",\n            coordinates:\n                [\n                    [\n                        [nePoint.x, nePoint.y],\n                        [swPoint.x, nePoint.y],\n                        [swPoint.x, swPoint.y],\n                        [nePoint.x, swPoint.y],\n                        [nePoint.x, nePoint.y]\n                    ]\n                ]\n        })\n    }\n\n    function pointInBounds(point, bounds) {\n        var boundsPoints = convertGoogleMapBoundsToXY(bounds),\n            boundsPoly = bboxToPolygon(boundsPoints.sw, boundsPoints.ne),\n            latLng = new Terraformer.Point({\n                type:\"Point\",\n                coordinates:[point.x, point.y]\n            });\n\n        return boundsPoly.contains(latLng);\n    }\n\n    function createQuadTree(xyPoints, inputBounds) {\n        var quadtree,\n//            xyBounds = convertGoogleMapBoundsToXY(inputBounds),\n            PROJECTION_BOUNDS = [[-20037508.3428, -10018754.1714], [20037508.3428, 10018754.1714]],\n\n            pointsInBounds = _.filter(xyPoints, function (point) {\n                return pointInBounds(point, inputBounds)\n            });\n\n        if (xyPoints.length === pointsInBounds.length) {\n            quadtree = d3.geom.quadtree()\n                .extent(PROJECTION_BOUNDS)\n//                .extent([[xyBounds.sw.x, xyBounds.sw.y], [xyBounds.ne.x, xyBounds.ne.y]])\n            (pointsToArray(pointsInBounds));\n        } else {\n            quadtree = d3.geom.quadtree(pointsInBounds);\n        }\n\n        updateNodes(quadtree);\n\n        return quadtree;\n\n    }\n\n    function pointsToPolygon(x1, y1, x2, y2) {\n        return bboxToPolygon({x: x1, y: y1}, {x: x2, y: y2});\n    }\n\n    function flattenQuadtree(quadtree) {\n        var nodes = {},\n            nodeId = 0;\n\n        quadtree.visit(function (node) {\n            node.id = nodeId;\n            nodes[nodeId] = node;\n\n            nodeId += 1;\n        });\n\n        return nodes;\n    }\n\n    function boundingBoxToExtent(inputBounds) {\n        var bounds = inputBounds.bbox();\n        return [[bounds[0], bounds[1]], [bounds[2], bounds[3]]];\n    }\n\n    function projectedCoordinatePairToGoogleLatLng(coordinates) {\n        var geographicCoords = proj4(EPSG_4087, EPSG_4326, coordinates);\n\n        return new google.maps.LatLng(geographicCoords[1], geographicCoords[0]);\n    }\n\n    function polygonToGoogleLatLngBounds(inputBounds) {\n        var bounds = boundingBoxToExtent(inputBounds),\n            swCoords = bounds[0],\n            neCoords = bounds[1],\n\n            swGlatLng = projectedCoordinatePairToGoogleLatLng(swCoords),\n            neGlatLng = projectedCoordinatePairToGoogleLatLng(neCoords);\n\n        return new google.maps.LatLngBounds(swGlatLng, neGlatLng);\n    }\n\n    function googleMapsRectangleFromBounds(inputBounds) {\n        return new google.maps.Rectangle({\n            bounds: polygonToGoogleLatLngBounds(inputBounds),\n            map: app.map,\n            fillOpacity: 0\n        });\n    }\n\n    function collectionToXyPoints() {\n        return _.map(collection.pluck('location'), convertLatLngToXy);\n    }\n\n    function getContainingBounds(nodes) {\n        return _.filter(nodes, function (childNode) {\n            return childNode.containsLeaf;\n        });\n    }\n\n    function boundsContainedBy(innerBounds, outerBounds) {\n        var X_COORD = 0;\n        var Y_COORD = 1;\n        var innerBoundsCoords = boundingBoxToExtent(innerBounds),\n            outerBoundsCoords = boundingBoxToExtent(outerBounds),\n\n            outerNeCoords = outerBoundsCoords[1],\n            outerSwCoords = outerBoundsCoords[0],\n            innerNeCoords = innerBoundsCoords[1],\n            innerSwCoords = innerBoundsCoords[0];\n\n        return outerNeCoords[X_COORD] >= innerNeCoords[X_COORD] &&\n            outerNeCoords[Y_COORD] >= innerNeCoords[Y_COORD] &&\n            outerSwCoords[X_COORD] <= innerSwCoords[X_COORD] &&\n            outerSwCoords[Y_COORD] <= innerSwCoords[Y_COORD];\n    }\n\n    function createAndRenderQuadtree(bounds) {\n        var xyPoints = collectionToXyPoints(),\n            quadtree = createQuadTree(xyPoints, bounds),\n            nodes = flattenQuadtree(quadtree),\n            groupsToRender,\n\n            containingBoundsSet;\n\n        _.each(rects, function (rect) {\n            rect.setMap(null);\n        });\n\n        containingBoundsSet = _.map(getContainingBounds(nodes), function (node) {\n            var nodeBounds = node.bounds,\n                xyBounds = pointsToPolygon(\n                    nodeBounds.x1,\n                    nodeBounds.y1,\n                    nodeBounds.x2,\n                    nodeBounds.y2\n                );\n\n            xyBounds.id = node.id;\n\n            return xyBounds;\n        });\n\n        groupsToRender = _.filter(containingBoundsSet, function (outerBounds) {\n            var containsOthers = false;\n\n            _.each(containingBoundsSet, function (innerBounds) {\n                if (boundsContainedBy(innerBounds, outerBounds) && outerBounds.id != innerBounds.id) {\n                    containsOthers = true;\n                }\n                return !containsOthers;\n            });\n\n            return !containsOthers;\n        });\n\n        _.each(groupsToRender, function (childBounds) {\n            var nodesInChildBounds = _.compact(nodes[childBounds.id].nodes);\n\n            _.each(nodesInChildBounds, function (nodeToHide) {\n                Backbone.Events.trigger('hide-marker', {point: {x: nodeToHide.x, y: nodeToHide.y}, bounds: childBounds});\n            });\n\n            rects.push(googleMapsRectangleFromBounds(childBounds));\n        });\n\n        app.containingBounds = containingBoundsSet;\n\n        return quadtree;\n    }\n\n    function createMarkerForGroup(bounds) {\n        var center;\n\n        if (!groupMarkers[bounds.id]) {\n            center = polygonToGoogleLatLngBounds(bounds).getCenter();\n\n            groupMarkers[bounds.id] = new google.maps.Marker({\n                position: center,\n                map: app.map,\n                title: 'group ' + bounds.id,\n                opacity: .5\n            });\n        }\n    }\n\n    function resetGroupMarkerCache() {\n        _.each(groupMarkers, function (marker) {\n            marker.setMap(null);\n        });\n\n        groupMarkers = {};\n    }\n\n    Backbone.Events.on('map-loaded', function () {\n        mapLoaded.resolve();\n    });\n\n    Backbone.Events.on('hide-marker', function (nodeToHide) {\n        var model = collection.where({x_coord: nodeToHide.point.x, y_coord: nodeToHide.point.y})[0];\n\n//        markers[model.id].setMap(null);\n        markers[model.id].setOpacity(.2);\n\n        createMarkerForGroup(nodeToHide.bounds);\n    });\n\n    $.when(mapLoaded, loaded).done(function () {\n        var quadtree;\n\n        Backbone.Events.on('bounds-change', _.debounce(function (bounds) {\n            resetGroupMarkerCache();\n\n            _.each(markers, function (marker) {\n//                marker.setMap(app.map);\n                marker.setOpacity(1.0);\n            });\n\n            createAndRenderQuadtree(bounds);\n\n        }), 500);\n\n        collection.each(function (item) {\n            var point = convertLatLngToXy(item.attributes.location);\n\n            item.set('x_coord', point.x);\n            item.set('y_coord', point.y);\n\n            var marker = new google.maps.Marker({\n                position: new google.maps.LatLng(item.attributes.location.lat, item.attributes.location.lng),\n                title: item.attributes.name\n            });\n\n            markers[item.id] = marker;\n\n            marker.setMap(app.map);\n        });\n\n        quadtree = createAndRenderQuadtree(app.map.getBounds());\n\n        app.quadtree = quadtree;\n    });\n\n}(app));\n"]}