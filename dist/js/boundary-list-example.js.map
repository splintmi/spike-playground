{"version":3,"sources":["../../js/namespace.js","../../js/components/answers-model.js","../../js/components/answer-collection.js","../../js/iowa.js","../../js/svg-boundary.js","../../js/svg-boundary-factory.js","../../js/svg-boundary-list-example.js"],"names":[],"mappings":"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","file":"boundary-list-example.js","sourcesContent":["(function(global) {\n    'use strict';\n\n    function ns (parentNamespace, nsString, extent) {\n        var namespaceParts = nsString.split('.'),\n            hlq = 'app',\n            parent = parentNamespace,\n            i;\n\n        if (namespaceParts[0] === hlq) {\n            namespaceParts = namespaceParts.slice(0);\n        }\n\n        for (i = 0; i < namespaceParts.length; i += 1) {\n            if (parent[namespaceParts[i]] === undefined) {\n                if (extent) {\n                    parent[namespaceParts[i]] = extent;\n                } else {\n                    parent[namespaceParts[i]] = {};\n                }\n            }\n\n            parent = parent[namespaceParts[i]];\n        }\n\n        return parent;\n    }\n\n    function bindNS (parentNamespace, namespaceString, extent) {\n        ns.apply(this, [parentNamespace, namespaceString, extent]);\n    }\n\n    global.app = {\n        ns: ns,\n        bindNS: bindNS\n    };\n\n}(this));\n","/*global app Backbone*/\n(function (app) {\n    'use strict';\n\n    app.ns(app, 'AnswersModel', Backbone.Model.extend({\n        defaults: {\n            'x_coord': 0,\n            'y_coord': 0\n        },\n\n        initialize: function () {  }\n    }));\n}(app));\n","/*global app Backbone $*/\n(function (app) {\n    'use strict';\n\n    app.ns(app, 'AnswerCollection', Backbone.Collection.extend({\n        model: app.AnswersModel,\n\n        initialize: function () {\n            this.loaded = new $.Deferred();\n        },\n\n        fetch: function () {\n            var jqXHR = Backbone.Collection.prototype.fetch.apply(this, arguments);\n\n            jqXHR.done(this.loaded.resolve);\n            jqXHR.fail(this.loaded.reject);\n        },\n\n        parse: function(response) {\n            return response.items;\n        },\n        url: 'http://api.stackexchange.com/2.2/tags/reactjs/faq?site=stackoverflow'\n    }));\n}(app));\n","(function (app) {\n    app.ns(app, 'getIowaGeoJson', function () {\n        return [\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Dallas\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.8166,41.8638],[-93.7892,41.5133],[-93.8221,41.5078],[-94.2438,41.5023],[-94.2438,41.6009],[-94.2821,41.6009],[-94.2821,41.8638],[-94.1617,41.8638],[-93.8166,41.8638]]]]}}\n            ]},\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Polk\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.7728,41.8638],[-93.6961,41.8638],[-93.3456,41.8638],[-93.3292,41.5078],[-93.3292,41.4914],[-93.7071,41.5133],[-93.7892,41.5133],[-93.8166,41.8638],[-93.7728,41.8638]]]]}}\n            ]},\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Warren\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.7071,41.5133],[-93.3292,41.4914],[-93.3292,41.1627],[-93.5592,41.1627],[-93.6742,41.1627],[-93.7892,41.1627],[-93.7892,41.5133],[-93.7071,41.5133]]]]}}\n            ]},\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Madison\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.8221,41.5078],[-93.7892,41.5133],[-93.7892,41.1627],[-94.0138,41.1573],[-94.2438,41.1573],[-94.2438,41.5023],[-93.8221,41.5078]]]]}}\n            ]}\n        ];\n    });\n}(app));\n","(function (app) {\n    'use strict';\n\n    function createPathWith(projection) {\n        return d3.geo.path()\n            .projection(projection);\n    }\n\n    function SvgBoundary(element, dimensions) {\n        this.element = element;\n        this.height = dimensions.height;\n        this.width = dimensions.width;\n    }\n\n    _.extend(SvgBoundary.prototype, {\n        render: function (feature, projection) {\n            var fragment = document.createDocumentFragment(),\n                path = createPathWith(projection),\n                svg = d3.select(fragment).append('svg');\n\n            svg\n                .attr('viewBox', '0 0 ' + this.width + ' ' + this.height)\n                .selectAll('path')\n                .data(feature.features)\n                .enter()\n                .append('path')\n                .attr('d', path)\n                .attr('fill', 'url(#diagonalHatch)');\n\n            this.element.appendChild(fragment);\n\n            return svg;\n        }\n    });\n\n    app.ns(app, 'SvgBoundary', SvgBoundary);\n\n}(app));\n","(function (app) {\n    'use strict';\n\n    var DEFAULT_SIZE_RATIO = .95;\n//        ,\n//        PATTERN = '<pattern id=\"diagonalHatch\" width=\"10\" height=\"10\" patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\"> ' +\n//            '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"10\"/> ' +\n//            '</pattern>';\n\n    function createDefaultProjection() {\n        return d3.geo.mercator()\n            .scale(1)\n            .translate([0, 0]);\n    }\n\n    function createPathWith(projection) {\n        return d3.geo.path()\n            .projection(projection);\n    }\n\n    function calculateScaleWith(bounds, dimensions) {\n        return Math.max(\n                (bounds.ne.lng - bounds.sw.lng) / dimensions.width,\n                (bounds.ne.lat - bounds.sw.lat) / dimensions.height\n        );\n    }\n\n    function calculateTranslationWith(dimensions, scale, bounds) {\n        return [\n                (dimensions.width - scale * (bounds.ne.lng + bounds.sw.lng)) / 2,\n                (dimensions.height - scale * (bounds.ne.lat + bounds.sw.lat)) / 2\n        ];\n    }\n\n    function getBoundsPoints(bounds) {\n        return {\n            sw: {\n                lat: bounds[0][1],\n                lng: bounds[0][0]\n            },\n            ne: {\n                lat: bounds[1][1],\n                lng: bounds[1][0]\n            }\n        };\n    }\n\n    /**\n     * Math for this function was borrowed from\n     * http://stackoverflow.com/questions/14492284/center-a-map-in-d3-given-a-geojson-object#14691788\n     */\n    function getMercatorProjection(feature, dimensions, customSizeRatio) {\n        var sizeRatio = customSizeRatio || DEFAULT_SIZE_RATIO,\n            projection = createDefaultProjection(),\n            path = createPathWith(projection),\n            bounds = getBoundsPoints(path.bounds(feature)),\n            center = d3.geo.centroid(feature),\n            scale = calculateScaleWith(bounds, dimensions),\n            translation = calculateTranslationWith(dimensions, scale, bounds);\n\n        projection\n                .center(center)\n                .scale(sizeRatio / scale)\n                .translate(translation);\n\n        return projection;\n    }\n\n    function rawCoordinateToPoint(projection, coordinate) {\n        var latLng = new google.maps.LatLng(coordinate.lat, coordinate.lng);\n\n        return projection.fromLatLngToDivPixel(latLng);\n    }\n\n    function bboxToDxDy(projection, bbox) {\n        var dx = rawCoordinateToPoint(projection, bbox.sw).x,\n            dy = rawCoordinateToPoint(projection, bbox.ne).y;\n\n        return {\n            dx: dx,\n            dy: dy\n        };\n    }\n\n    function getGoogleOverlayViewProjection(overlayViewProjection, bbox) {\n        var boundsXy = bboxToDxDy(overlayViewProjection, bbox);\n\n        return function (coordinates) {\n            var googleCoordinates = new google.maps.LatLng(coordinates[1], coordinates[0]),\n                pixelCoordinates = overlayViewProjection.fromLatLngToDivPixel(googleCoordinates);\n\n            return [pixelCoordinates.x - boundsXy.dx, pixelCoordinates.y - boundsXy.dy];\n        };\n    }\n\n    function convertFeatureToBounds(data) {\n        return getBoundsPoints(d3.geo.bounds(data));\n    }\n\n    function create(element, dimensions) {\n        return new app.SvgBoundary(element, dimensions);\n    }\n\n    app.ns(app, 'SvgBoundaryFactory', {\n        create: create,\n        convertBounds: convertFeatureToBounds,\n        getMercatorProjection: getMercatorProjection,\n        getOverlayViewProjection: getGoogleOverlayViewProjection\n    });\n\n}(app));\n","(function (app){\n    'use strict';\n\n    var SvgFactory = app.SvgBoundaryFactory;\n\n    function renderBoundary(boundary, element, dimensions) {\n        var projection = SvgFactory.getMercatorProjection(boundary, dimensions),\n            svgBoundary = SvgFactory.create(element, dimensions);\n\n        svgBoundary.render(boundary, projection);\n\n        return svgBoundary;\n    }\n\n    function renderList(counties) {\n        var container = document.querySelector('#main-container ul'),\n            height = 50,\n            width = 50;\n\n        _.each(counties, function (county) {\n            var listItem = document.createElement('li'),\n                element = document.createDocumentFragment();\n\n            $(listItem).css('height', height);\n            $(listItem).css('width', width);\n            listItem.className = 'polygon';\n\n            renderBoundary(county, element, {\n                height: height,\n                width: width\n            });\n\n            listItem.appendChild(element);\n            container.appendChild(listItem);\n        });\n    }\n\n    renderList(app.getIowaGeoJson());\n}(app));\n"]}