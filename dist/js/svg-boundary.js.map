{"version":3,"sources":["../../js/namespace.js","../../js/components/answers-model.js","../../js/components/answer-collection.js","../../js/iowa.js","../../js/map.js","../../js/donut-graph.js","../../js/svg-boundary.js","../../js/ground-view.js","../../js/ground-view-example.js"],"names":[],"mappings":"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","file":"svg-boundary.js","sourcesContent":["(function(global) {\n    'use strict';\n\n    function ns (parent_ns, ns_string, extent) {\n        var ns_parts = ns_string.split('.'),\n            hlq = 'app',\n            parent = parent_ns,\n            i;\n\n        if (ns_parts[0] === hlq) {\n            ns_parts = ns_parts.slice(0);\n        }\n\n        for (i = 0; i < ns_parts.length; i += 1) {\n            if (parent[ns_parts[i]] === undefined) {\n                if (extent) {\n                    parent[ns_parts[i]] = extent;\n                } else {\n                    parent[ns_parts[i]] = {};\n                }\n            }\n\n            parent = parent[ns_parts[i]];\n        }\n\n        return parent;\n    }\n\n    function bindNS (parent_ns, ns_string, extent) {\n        ns.apply(this, [parent_ns, ns_string, extent]);\n    }\n\n    global.app = {\n        ns: ns,\n        bindNS: bindNS\n    };\n\n}(this));\n","(function (app) {\n    app.ns(app, 'AnswersModel', Backbone.Model.extend({\n        defaults: {\n            'x_coord': 0,\n            'y_coord': 0\n        },\n\n        initialize: function () {  }\n    }));\n}(app));","(function (app) {\n    app.ns(app, 'AnswerCollection', Backbone.Collection.extend({\n        model: app.AnswersModel,\n\n        initialize: function () {\n            this.loaded = $.Deferred();\n        },\n\n        fetch: function () {\n            var jqXHR = Backbone.Collection.prototype.fetch.apply(this, arguments);\n\n            jqXHR.done(this.loaded.resolve);\n            jqXHR.fail(this.loaded.reject);\n        },\n\n        parse: function(response) {\n            return response.items;\n        },\n        url: 'http://api.stackexchange.com/2.2/tags/reactjs/faq?site=stackoverflow'\n    }));\n}(app));","(function (app) {\n    app.ns(app, 'IowaGeoJson', function () {\n        return [\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Dallas\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.8166,41.8638],[-93.7892,41.5133],[-93.8221,41.5078],[-94.2438,41.5023],[-94.2438,41.6009],[-94.2821,41.6009],[-94.2821,41.8638],[-94.1617,41.8638],[-93.8166,41.8638]]]]}}\n            ]},\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Polk\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.7728,41.8638],[-93.6961,41.8638],[-93.3456,41.8638],[-93.3292,41.5078],[-93.3292,41.4914],[-93.7071,41.5133],[-93.7892,41.5133],[-93.8166,41.8638],[-93.7728,41.8638]]]]}}\n            ]},\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Warren\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.7071,41.5133],[-93.3292,41.4914],[-93.3292,41.1627],[-93.5592,41.1627],[-93.6742,41.1627],[-93.7892,41.1627],[-93.7892,41.5133],[-93.7071,41.5133]]]]}}\n            ]},\n            {\"type\":\"FeatureCollection\",\"properties\":{\"kind\":\"state\",\"state\":\"IA\"},\"features\":[\n                {\"type\":\"Feature\",\"properties\":{\"kind\":\"county\",\"name\":\"Madison\",\"state\":\"IA\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-93.8221,41.5078],[-93.7892,41.5133],[-93.7892,41.1627],[-94.0138,41.1573],[-94.2438,41.1573],[-94.2438,41.5023],[-93.8221,41.5078]]]]}}\n            ]}\n        ];\n    });\n}(app));","(function (app) {\n    function initialize() {\n        var mapOptions = {\n            center: new google.maps.LatLng(40.01144663490021, -90.22767623046876),\n            zoom: 7\n        };\n        var map = new google.maps.Map(document.getElementById(\"map-canvas\"),\n            mapOptions);\n\n        app.ns(app, 'map', map);\n\n        google.maps.event.addListener(map, 'idle', function () {\n            Backbone.Events.trigger('map-idle');\n        });\n\n        google.maps.event.addListener(map, 'zoom_changed', function () {\n            Backbone.Events.trigger('zoom-change', map.getBounds());\n        });\n\n        google.maps.event.addListener(map, 'bounds_changed', function () {\n            Backbone.Events.trigger('bounds-change', map.getBounds());\n        });\n\n        google.maps.event.addListenerOnce(map, 'idle', function () {\n            Backbone.Events.trigger('map-loaded');\n        });\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n}(app));","(function (app) {\n\n    function createSvg(element, width, height) {\n        return d3.select(element).append('svg')\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n    }\n\n    function graph(element, data) {\n        var width = 100,\n            height = 100,\n            radius = Math.min(width, height) / 2,\n\n            color,\n            arc,\n            pie,\n            svg,\n            g;\n\n        color = d3.scale.ordinal()\n            .range(['#98abc5', '#8a89a6', '#7b6888', '#6b486b', '#a05d56', '#d0743c', '#ff8c00']);\n\n        arc = d3.svg.arc()\n            .outerRadius(radius - 60)\n            .innerRadius(radius - 70);\n\n        pie = d3.layout.pie()\n            .sort(null)\n            .value(function(d) {\n                return d.percent_done;\n            });\n\n        svg = createSvg(element, width, height);\n\n        g = svg.selectAll('.arc')\n            .data(pie(data))\n            .enter().append('g')\n            .attr('class', 'arc');\n\n        g.append('path')\n            .attr('d', arc)\n            .style('fill', function(d) {\n                var value = d.data.percent_done;\n\n                return color(value);\n            });\n\n        g.append('text')\n            .attr('transform', function(d) {\n                return 'translate(' + arc.centroid(d) + ')';\n            })\n            .attr('dy', '.35em')\n            .style('text-anchor', 'middle');\n    }\n\n    app.ns(app, 'donut', {\n        graph: graph\n    });\n\n}(app));","(function (app) {\n\n    function getMercatorProjection(centerPoint, extents) {\n        return d3.geo.mercator()\n                .center([centerPoint.lng(), centerPoint.lat()])\n                .translate([extents.width / 2, extents.height / 2])\n                .scale(5200);\n    }\n\n    function getBoundsPoints(bounds) {\n        return {\n            sw: {\n                lat: bounds[0][1],\n                lng: bounds[0][0]\n            },\n            ne: {\n                lat: bounds[1][1],\n                lng: bounds[1][0]\n            }\n        };\n    }\n\n    function convertFeatureToBounds(data) {\n        return getBoundsPoints(d3.geo.bounds(data));\n    }\n\n    function createPolygonWith(geojson, element, extents, projection) {\n        var path = d3.geo.path().projection(projection),\n            pattern = '<pattern id=\"diagonalHatch\" width=\"10\" height=\"10\" patternTransform=\"rotate(45 0 0)\" patternUnits=\"userSpaceOnUse\"> ' +\n                '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"10\"/> ' +\n                '</pattern>',\n\n            svg = d3.select(element).append('svg');\n\n        svg.append('defs').html(pattern);\n\n        svg\n            .attr('viewBox', '0 0 ' + extents.width + ' ' + extents.height)\n            .selectAll('path')\n            .data(geojson.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .attr('fill', 'url(#diagonalHatch)');\n\n        return svg;\n    }\n\n    app.ns(app, 'SvgBoundaryFactory', {\n        create: createPolygonWith,\n        convertBounds: convertFeatureToBounds\n    });\n\n}(app));","(function (app) {\n\n    var SvgFactory = app.SvgBoundaryFactory;\n\n    function gMapProjectionTransform(projection, extents) {\n        var dx = extents.sw.x,\n            dy = extents.ne.y;\n\n        return function (coordinates) {\n            var googleCoordinates = new google.maps.LatLng(coordinates[1], coordinates[0]),\n                pixelCoordinates = projection.fromLatLngToDivPixel(googleCoordinates);\n\n            return [pixelCoordinates.x - dx, pixelCoordinates.y - dy];\n        }\n    }\n\n    function getGoogleLatLngBounds(bounds) {\n        var swPoint = new google.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n            nePoint = new google.maps.LatLng(bounds.ne.lat, bounds.ne.lng);\n\n        return new google.maps.LatLngBounds(swPoint, nePoint);\n    }\n\n    function getExtents(projection) {\n        var southWestPoint = projection.fromLatLngToDivPixel(this._bounds.getSouthWest()),\n            northEastPoint = projection.fromLatLngToDivPixel(this._bounds.getNorthEast());\n\n        return {\n            sw: southWestPoint,\n            ne: northEastPoint,\n\n            width: northEastPoint.x - southWestPoint.x,\n            height: southWestPoint.y - northEastPoint.y\n        }\n    }\n\n    function setTopLeftFor(div, sw, ne) {\n        div.style.left = sw.x + 'px';\n        div.style.top = ne.y + 'px';\n    }\n\n    function setHeightAndWidthFor(div, width, height) {\n        div.style.width = width + 'px';\n        div.style.height = height + 'px';\n    }\n\n    function GroundOverlay (map, data) {\n        this._div = document.createElement('div');\n        this._div.className = 'ground-overlay-view';\n\n        this._data = data;\n        this._bounds = getGoogleLatLngBounds(SvgFactory.convertBounds(this._data));\n        this._svg = null;\n\n        this.setMap(map);\n    }\n\n    GroundOverlay.prototype = new google.maps.OverlayView();\n\n    _.extend(GroundOverlay.prototype, {\n        onAdd: function () {\n            var panes = this.getPanes();\n\n            panes.overlayLayer.appendChild(this._div);\n        },\n\n        draw: function () {\n            var overlayProjection = this.getProjection(),\n                fragment = document.createDocumentFragment(),\n                extents,\n                width,\n                height;\n\n            extents = getExtents.call(this, overlayProjection);\n            width = extents.width;\n            height = extents.height;\n\n            setTopLeftFor(this._div, extents.sw, extents.ne);\n            setHeightAndWidthFor(this._div, width, height);\n\n            if (this._svg) {\n                this._svg.attr('width', extents.width);\n                this._svg.attr('height', extents.height);\n            } else {\n                this._svg = SvgFactory.create(this._data, fragment, extents, gMapProjectionTransform(overlayProjection, extents));\n                this._data = null;\n                this._div.appendChild(fragment);\n            }\n\n        }\n    });\n\n    app.ns(app, 'GroundViewOverlay', GroundOverlay);\n\n}(app));","(function (app) {\n    var host = Backbone.history.location.hostname,\n        collection = new Backbone.Collection(),\n        loaded,\n        data = '/dummy-data.json',\n        endPointUrl = host === 'localhost' ? data : '/spike-playground' + data,\n        mapLoaded = $.Deferred();\n\n    loaded = collection.fetch({url: endPointUrl});\n\n    Backbone.Events.on('map-loaded', function () {\n        app.map.setCenter(new google.maps.LatLng(41.577060100767945, -93.90260298828126));\n\n        mapLoaded.resolve();\n    });\n\n    function createGroundOverlay(county) {\n        return new app.GroundViewOverlay(app.map, county);\n    }\n\n    $.when(mapLoaded, loaded).done(function () {\n        var counties = app.IowaGeoJson();\n\n        _.each(counties, function (county) {\n            createGroundOverlay(county);\n        });\n    });\n\n}(app));"]}